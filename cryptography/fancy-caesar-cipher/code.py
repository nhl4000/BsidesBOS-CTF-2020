import sys
from Crypto.Util.number import inverse, long_to_bytes
from factordb.factordb import FactorDB

#--------data--------#

n = 787832544329959007038179826267104814346426097027021826284490571746308136755935220887363667631906537830506284746961811787763247785430251450869278059679497756741486866087801732022264609260692870742652850271134537565704135696632863536558502529521299512189435971241277363075231233541738656219547254076627606734470861030508215752738899512858544360351542919641167646975677262834133983333726606796323567752516727217543220225157708955576973112661730800978058700984779711674741048158287936760421525284533008968349133463884903283851067294405466484817427493226985343351326720057264318740594824556203595793660146479013474963616297084584110876174769727146616004769871558432786096049652721928732263640589821224669124808988054732377343715309515723204966509132765219389722025264958624408809854581585761952606496878093034801143188550666713058460629529274924366489623877460260374449211458044719348612980073661966929889521545821828686211493663176713877428294119921787043538779353239763339079817804783471240293888491579791803800016735929285340496366027174168634400294976083522790715140975551151550542123915635233251014576377337885257233137891524442927224819047363474812265107840365503364503884546298189077302909695224745213592689902606139662809389383773
e = 65537
c = 489849265842714270618894307920014231735178971751621348384844314501990588727617563082384224945120644035818703774747014013203131896454240233382906488062933515803748302886350424979950646386928706998945785654720349135564814364087893382701695248272464897985355682331802428208732383222214253265835827864985193824434810662008888137646444141437471441302510873107148647853555461305852317416296685181780288262101964000456336940898534482481580626467608936376897902791537918319612096644392646648719831786344845253211665004945436636203639000892641695792482592374498260072144905245780103331514247887908932859115081993588152167137751703969946379298555174598218423407180743426677321528717817205605882967136581649366621832646555793584398605978941750710185163850464545158712501624485493453447771572890099587659144172820577531026946945063040922115962794646826314724816505191326566162261969946756272579000521635718827305650325362287616434270523938960960437056810960461625114994867149782360806031229820421591108613456056581528947180740264606440350627759836109721215102849312426034518452514953639096338382713825899042911903274392864770732461257362880549839306760938625082333787452887046101015453702716198874186714004968234099078626992547132785002858810232


#--------factordb--------#

f = FactorDB(n)
f.connect()
factors = f.get_factor_list()
print(len(factors))
sys.exit()

#print(hex(pow(c,
p = -1
q = -1

def decrypt(e, n, flag):
	num2 = flag + n
	print(num2)
	print(num2 ** 1/e)
#	print(pow(flag + n, float(1/e)))
	return 


#def decrypt_solve(e, n, flag):

cipher_text = open("fancy_caesar_cipher.out", "r")
i = 1
e = -1
n = -1
for line in cipher_text:
	if (i == 2):
		e = int(line)
	elif (i == 3):
		n = int(line)
	elif (i == 5):
		flags = eval(line)
	i += 1

cipher_text.close()

print(e)
print(n)
print(len(flags))

#decrypt(e,n, flags[0])

#decrypt_solve(e, n, flag)

